@using DotNetCoreWeb.DTO
@using MyProject.Core

@model List<GoodsOutput>
<h1>商品列表</h1>

<table class="table" id="app">
    <thead>
        <tr>
            <td>序号</td>
            <td>商品名称</td>
            <td>操作</td>
        </tr>
    </thead>
    @*@foreach (GoodsOutput item in Model)
        {*@
    <tr v-for="item in goods">
        <td>{{item.Id}}</td>
        <td>{{item.Name}}</td>
        
    </tr>
    @*}*@
</table>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/vue/1.0.28/vue.min.js"></script>
    <script>
        //$(function () {
        //    function do_miaosha(orderid) {
        //        if (!orderid) return;

        //    }
        //})
        var HtmlUtil = {
            /*1.用浏览器内部转换器实现html转码*/
            htmlEncode: function (html) {
                //1.首先动态创建一个容器标签元素，如DIV
                var temp = document.createElement("div");
                //2.然后将要转换的字符串设置为这个元素的innerText(ie支持)或者textContent(火狐，google支持)
                (temp.textContent != undefined) ? (temp.textContent = html) : (temp.innerText = html);
                //3.最后返回这个元素的innerHTML，即得到经过HTML编码转换的字符串了
                var output = temp.innerHTML;
                temp = null;
                return output;
            },
            /*2.用浏览器内部转换器实现html解码*/
            htmlDecode: function (text) {
                //1.首先动态创建一个容器标签元素，如DIV
                var temp = document.createElement("div");
                //2.然后将要转换的字符串设置为这个元素的innerHTML(ie，火狐，google都支持)
                temp.innerHTML = text;
                //3.最后返回这个元素的innerText(ie支持)或者textContent(火狐，google支持)，即得到经过HTML解码的字符串了。
                var output = temp.innerText || temp.textContent;
                temp = null;
                return output;
            },
            replaceStr: function (text) {
                return text.replace("/&quot;/g", "\"");
            }
        };

        var returnModel = HtmlUtil.replaceStr("@ViewBag.ReturnModel");

        var app = new Vue({
            el: '#app',
            data: {
                goods: returnModel
            },
            methods: {
                do_miaosha: function () {
                    alert('hello');
                }
            }
        });
    </script>
}